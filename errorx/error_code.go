// Code generated by AfterShip SDK Generator. DO NOT EDIT.

package errorx

// local error
const (
    ErrOk = 0
    // ErrInvalidApiKey Invalid api key which detected by the SDK locally, for example, missing API key, wrong api key format.
    ErrInvalidApiKey = 1
    // ErrInvalidOption Invalid option, details would be described in the message.
    ErrInvalidOption = 2
    // ErrBadRequest Invalid request parameters, only for the errors that are possible to be caught by the SDK locally.
    ErrBadRequest = 3
    // ErrRateLimitExceed Local rate limit exceeds error.
    ErrRateLimitExceed = 4
    // ErrTimeout Request timeout
    ErrTimeout = 5
    // ErrUnknown unknown error
    ErrUnknown = 6
)

// remote error
const (
    ErrInvalidRequest = 400
    ErrInvalidJson = 4001
    ErrTrackingAlreadyExist = 4003
    ErrTrackingDoesNotExist = 4004
    ErrTrackingNumberInvalid = 4005
    ErrTrackingRequired = 4006
    ErrTrackingNumberRequired = 4007
    ErrValueInvalid = 4008
    ErrValueRequired = 4009
    ErrSlugInvalid = 4010
    ErrMissingOrInvalidRequiredField = 4011
    ErrBadCourier = 4012
    ErrInactiveRetrackNotAllowed = 4013
    ErrNotificationReuqired = 4014
    ErrIdInvalid = 4015
    ErrRetrackOnceAllowed = 4016
    ErrTrackingNumberFormatInvalid = 4017
    ErrApiKeyInvalid = 401
    ErrRequestNotAllowed = 403
    ErrNotFound = 404
    ErrTooManyRequest = 429
    ErrInternalError = 500
)

var codeMap = map[int]int{
    400: ErrInvalidRequest,
    4001: ErrInvalidJson,
    4003: ErrTrackingAlreadyExist,
    4004: ErrTrackingDoesNotExist,
    4005: ErrTrackingNumberInvalid,
    4006: ErrTrackingRequired,
    4007: ErrTrackingNumberRequired,
    4008: ErrValueInvalid,
    4009: ErrValueRequired,
    4010: ErrSlugInvalid,
    4011: ErrMissingOrInvalidRequiredField,
    4012: ErrBadCourier,
    4013: ErrInactiveRetrackNotAllowed,
    4014: ErrNotificationReuqired,
    4015: ErrIdInvalid,
    4016: ErrRetrackOnceAllowed,
    4017: ErrTrackingNumberFormatInvalid,
    401: ErrApiKeyInvalid,
    403: ErrRequestNotAllowed,
    404: ErrNotFound,
    429: ErrTooManyRequest,
    500: ErrInternalError,
}

var localMsg = map[int]string{
    ErrOk:              "",
    ErrInvalidApiKey:   "Invalid API key",
    ErrInvalidOption:   "Invalid option: %s",
    ErrBadRequest:      "Invalid request",
    ErrRateLimitExceed: "You have exceeded the API call rate limit. The default limit is 10 requests per second.",
    ErrTimeout:         "Request timed out.",
}

func GetErrorCode(metaCode int) int {
    if code, ok := codeMap[metaCode]; ok {
        return code
    }
    return ErrUnknown
}

func GetErrorMessage(code int) string {
    if msg, ok := localMsg[code]; ok {
        return msg
    }
    return ""
}