// Code generated by AfterShip SDK Generator. DO NOT EDIT.

package model

// CreateTrackingRequest 
type CreateTrackingRequest struct {
    // Tracking 
    Tracking *TrackingCreateTrackingRequest `json:"tracking"`
}

// TrackingCreateTrackingRequest 
type TrackingCreateTrackingRequest struct {
    // TrackingNumber Tracking number of a shipment.Duplicated tracking numbers, tracking numbers with invalid tracking number format will not be accepted.We only accept tracking numbers with length from 4 to 100We currently support the following characters in a tracking number:- A - Z- 0 - 9- `-` (Hyphen)- . (Period)- _ (Underscore)- / (Slash)
    TrackingNumber string `json:"tracking_number,omitempty"`
    // Slug Unique courier code. Get courier codes .
    Slug string `json:"slug,omitempty"`
    // Title By default this field shows the `tracking_number`, but you can customize it as you wish with any info (e.g. the order number).
    Title string `json:"title,omitempty"`
    // OrderId A globally-unique identifier for the order.
    OrderId string `json:"order_id,omitempty"`
    // OrderIdPath The URL for the order in your system or store.
    OrderIdPath string `json:"order_id_path,omitempty"`
    // CustomFields Custom fields that accept an object with string field. In order to protect the privacy of your customers, do not include any 
    CustomFields map[string]string `json:"custom_fields,omitempty"`
    // Language The recipient’s language. If you set up AfterShip notifications in different languages, we use this to send the recipient tracking updates in their preferred language. Use an  to specify the language.
    Language string `json:"language,omitempty"`
    // OrderPromisedDeliveryDate The promised delivery date of the order. It uses the format YYYY-MM-DD. This has no timezone and uses whatever date you provide. Since other EDDs use the shipment recipient’s timezone, we suggest following the same logic here.
    OrderPromisedDeliveryDate string `json:"order_promised_delivery_date,omitempty"`
    // DeliveryType Shipment delivery type- pickup_at_store- pickup_at_courier- door_to_door
    DeliveryType string `json:"delivery_type,omitempty"`
    // PickupLocation Shipment pickup location for receiver
    PickupLocation string `json:"pickup_location,omitempty"`
    // PickupNote Shipment pickup note for receiver
    PickupNote string `json:"pickup_note,omitempty"`
    // TrackingAccountNumber Additional field required by some carriers to retrieve the tracking info. The shipper’s carrier account number. Refer to our article on  for more details.
    TrackingAccountNumber string `json:"tracking_account_number,omitempty"`
    // TrackingKey Additional field required by some carriers to retrieve the tracking info. A type of tracking credential required by some carriers. Refer to our article on  for more details.
    TrackingKey string `json:"tracking_key,omitempty"`
    // TrackingShipDate Additional field required by some carriers to retrieve the tracking info. The date the shipment was sent, using the format YYYYMMDD. Refer to our article on  for more details.
    TrackingShipDate string `json:"tracking_ship_date,omitempty"`
    // Emails Email address(es) to receive email notifications. Accept either array or comma separated as input. Supports up to 3 email addresses.
    Emails []string `json:"emails,omitempty"`
    // Smses The phone number(s) to receive sms notifications.  Enter `+` andarea `code before` phone number. Accept either array or comma separated as input. Supports up to 3 phone numbers.
    Smses []string `json:"smses,omitempty"`
    // CustomerName Customer name of the tracking.
    CustomerName string `json:"customer_name,omitempty"`
    // OriginCountryIso3 The  for more details.
    OriginCountryIso3 string `json:"origin_country_iso3,omitempty"`
    // OriginState The state of the sender’s address. This can help AfterShip with various functions like tracking, carrier auto-detection and auto-correction, calculating an EDD, etc.
    OriginState string `json:"origin_state,omitempty"`
    // OriginCity The city of the sender’s address. This can help AfterShip with various functions like tracking, carrier auto-detection and auto-correction, calculating an EDD, etc.
    OriginCity string `json:"origin_city,omitempty"`
    // OriginPostalCode The postal of the sender’s address. This can help AfterShip with various functions like tracking, carrier auto-detection and auto-correction, calculating an EDD, etc.
    OriginPostalCode string `json:"origin_postal_code,omitempty"`
    // OriginRawLocation The sender address that the shipment is shipping from. This can help AfterShip with various functions like tracking, carrier auto-detection and auto-correction, calculating an EDD, etc.
    OriginRawLocation string `json:"origin_raw_location,omitempty"`
    // DestinationCountryIso3 The  for more details.
    DestinationCountryIso3 string `json:"destination_country_iso3,omitempty"`
    // DestinationState The state of the recipient’s address. This can help AfterShip with various functions like tracking, carrier auto-detection and auto-correction, calculating an EDD, etc. Also the additional field required by some carriers to retrieve the tracking info. The state/province of the recipient’s address. Refer to our article on  for more details.
    DestinationState string `json:"destination_state,omitempty"`
    // DestinationCity The city of the recipient’s address. This can help AfterShip with various functions like tracking, carrier auto-detection and auto-correction, calculating an EDD, etc.
    DestinationCity string `json:"destination_city,omitempty"`
    // DestinationPostalCode The postal of the recipient’s address. This can help AfterShip with various functions like tracking, carrier auto-detection and auto-correction, calculating an EDD, etc. Also the additional field required by some carriers to retrieve the tracking info. The postal code of the recipient’s address. Refer to our article on  for more details.
    DestinationPostalCode string `json:"destination_postal_code,omitempty"`
    // DestinationRawLocation The shipping address that the shipment is shipping to. This can help AfterShip with various functions like tracking, carrier auto-detection and auto-correction, calculating an EDD, etc.
    DestinationRawLocation string `json:"destination_raw_location,omitempty"`
    // Note Text field for the note
    Note string `json:"note,omitempty"`
    // SlugGroup Slug group is a group of slugs which belong to same courier. For example, when you inpit "fedex-group" as slug_group, AfterShip will detect the tracking with "fedex-uk", "fedex-fims", and other slugs which belong to "fedex". It cannot be used with slug at the same time. (
    SlugGroup SlugGroupV1 `json:"slug_group,omitempty"`
    // OrderDate Order date in YYYY-MM-DDTHH:mm:ssZ format. e.g. 2021-07-26T11:23:51-05:00
    OrderDate string `json:"order_date,omitempty"`
    // OrderNumber A unique, human-readable identifier for the order.
    OrderNumber string `json:"order_number,omitempty"`
    // ShipmentType The carrier service type for the shipment. If you provide info for this field, AfterShip will not update it with info from the carrier.
    ShipmentType string `json:"shipment_type,omitempty"`
    // ShipmentTags Used to add tags to your shipments to help categorize and filter them easily.
    ShipmentTags []string `json:"shipment_tags,omitempty"`
    // CourierConnectionId If you’ve connected multiple accounts for a single carrier on AfterShip, you can now use the courier_connection_id field to tell AfterShip which carrier account you’ve used to handle a shipment so we can track it. (
    CourierConnectionId string `json:"courier_connection_id,omitempty"`
    // NextCouriers If a shipment has multiple carriers, you can use the next_couriers field to tell AfterShip who the second carrier is. This is useful if the first carrier does not send us this information. 
    NextCouriers []NextCouriersTrackingCreateTrackingRequest `json:"next_couriers,omitempty"`
    // TrackingOriginCountry (Legacy) Replaced by `origin_country_iso3`. Additional field required by some carriers to retrieve the tracking info. The origin country/region of the shipment. Refer to our article on  for more details.
    TrackingOriginCountry string `json:"tracking_origin_country,omitempty"`
    // TrackingDestinationCountry (Legacy) Replaced by `destination_country_iso3`. Additional field required by some carriers to retrieve the tracking info. The destination country/region of the shipment. Refer to our article on  for more details.
    TrackingDestinationCountry string `json:"tracking_destination_country,omitempty"`
    // TrackingPostalCode (Legacy) Replaced by `destination_postal_code`. Additional field required by some carriers to retrieve the tracking info. The postal code of the recipient’s address. Refer to our article on  for more details.
    TrackingPostalCode string `json:"tracking_postal_code,omitempty"`
    // TrackingState (Legacy) Replaced by `destination_state`. Additional field required by some carriers to retrieve the tracking info. The state/province of the recipient’s address. Refer to our article on  for more details.
    TrackingState string `json:"tracking_state,omitempty"`
    // LocationId The location_id refers to the place where you fulfilled the items.  - If you provide a location_id, the system will automatically use it as the tracking's origin address. However, passing both location_id and any origin address information simultaneously is not allowed.- Please make sure you add your locations .
    LocationId string `json:"location_id,omitempty"`
    // ShippingMethod The shipping_method string refers to the chosen method for delivering the package. Merchants typically offer various shipping methods to consumers during the checkout process, such as, Local Delivery, Free Express Worldwide Shipping, etc
    ShippingMethod string `json:"shipping_method,omitempty"`
}

// NextCouriersTrackingCreateTrackingRequest 
type NextCouriersTrackingCreateTrackingRequest struct {
    // Slug 
    Slug string `json:"slug,omitempty"`
    // TrackingNumber Tracking number of a shipment.Duplicated tracking numbers, tracking numbers with invalid tracking number format will not be accepted.We only accept tracking numbers with length from 4 to 100We currently support the following characters in a tracking number:- A - Z- 0 - 9- `-` (Hyphen)- . (Period)- _ (Underscore)- / (Slash)
    TrackingNumber string `json:"tracking_number,omitempty"`
}


