// Code generated by AfterShip SDK Generator. DO NOT EDIT.

package model

// Checkpoint Object describes checkpoint information.
type Checkpoint struct {
    // CreatedAt The date and time of the checkpoint event was added to AfterShip. It uses the format `YYYY-MM-DDTHH:mm:ssZ` for the timezone GMT +0.
    CreatedAt string `json:"created_at,omitempty"`
    // Slug The unique code of courier for this checkpoint. Get courier slug 
    Slug string `json:"slug,omitempty"`
    // CheckpointTime The date and time of the checkpoint event, provided by the carrier. It uses the timezone of the checkpoint. The format may differ depending on how the carrier provides it:- YYYY-MM-DDTHH:mm:ss- YYYY-MM-DDTHH:mm:ssZ
    CheckpointTime string `json:"checkpoint_time,omitempty"`
    // Location Location info provided by carrier
    Location string `json:"location,omitempty"`
    // City City info provided by carrier
    City string `json:"city,omitempty"`
    // State State info provided by carrier
    State string `json:"state,omitempty"`
    // Zip Postal code info provided by carrier
    Zip string `json:"zip,omitempty"`
    // Coordinate The latitude and longitude coordinates indicate the precise location of the shipments that are currently in transit.
    Coordinate map[string]string `json:"coordinate,omitempty"`
    // CountryIso3 Country/Region ISO Alpha-3 (three letters) of the checkpoint
    CountryIso3 string `json:"country_iso3,omitempty"`
    // CountryName Country/Region name of the checkpoint, may also contain other location info.
    CountryName string `json:"country_name,omitempty"`
    // Message Checkpoint message
    Message string `json:"message,omitempty"`
    // Tag Current status of tracking. (
    Tag TagV1 `json:"tag,omitempty"`
    // Subtag Current subtag of checkpoint. (
    Subtag string `json:"subtag,omitempty"`
    // SubtagMessage Normalized checkpoint message. (
    SubtagMessage string `json:"subtag_message,omitempty"`
    // RawTag Checkpoint raw status provided by courier
    RawTag string `json:"raw_tag,omitempty"`
    // Events The array provides details about specific event(s) that occurred  to a shipment, such as "returned_to_sender". You can find the full list of events and reasons </span>- The events' value for the same checkpoint message is subject to change as we consistently strive to enhance the performance of this feature.
    Events *EventsCheckpoint `json:"events,omitempty"`
}

// EventsCheckpoint 
type EventsCheckpoint struct {
    // Code Represents the event code.
    Code string `json:"code,omitempty"`
    // Reason Describes the specific reason that led to the event.
    Reason *ReasonEventsCheckpoint `json:"reason,omitempty"`
}

// ReasonEventsCheckpoint 
type ReasonEventsCheckpoint struct {
    // Code The code of the reason. 
    Code string `json:"code,omitempty"`
}


